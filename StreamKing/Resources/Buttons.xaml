<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Merged Resource Dictionaries -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DropShadowEffect x:Key="dropShadow" Opacity="0.6" ShadowDepth="6" BlurRadius="20"/>

    <!-- Border Style Definition -->
    <Style TargetType="Button" x:Key="TabButton">
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Border.Effect" Value="{x:Null}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border" CornerRadius="{TemplateBinding Border.CornerRadius}" 
                        Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1" Effect="{x:Null}" UseLayoutRounding="True" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand"/>

        <Style.Triggers>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Effect" Value="{StaticResource dropShadow}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Primary Button -->
    <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource TabButton}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="Background" Value="{StaticResource SecondaryColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SecondaryColor}"/>
        <Setter Property="Padding" Value="48,5"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Border.CornerRadius" Value="4"/>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{StaticResource SecondaryDisabledColor}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SecondaryDisabledColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="true">
                <Setter Property="Background" Value="{StaticResource SecondaryColor}"/>
                <Setter Property="BorderBrush" Value="{StaticResource SecondaryColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Secondary Button -->
    <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource TabButton}">
        <Setter Property="Foreground" Value="{StaticResource SecondaryColor}"/>
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="Padding" Value="48,5"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Border.CornerRadius" Value="4"/>
        <Setter Property="Border.Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SecondaryColor}"/>

        <!--<Style.Triggers>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="{StaticResource PrimaryFocusColor}"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>
    
    <!-- Tertiary Button -->
    <Style x:Key="TertiaryButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter  HorizontalAlignment="Left" VerticalAlignment="Center">
                        
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextDecorations="Underline" Text="{TemplateBinding Content}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Foreground" Value="{StaticResource SecondaryColor}"/>
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="Padding" Value="48,5"/>
        <Setter Property="TextBlock.TextDecorations" Value="Underline"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- This style is used for buttons, to remove the WPF default 'animated' mouse over effect -->
    <Style x:Key="RemoveButtonHoverStyle"
           TargetType="Button">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{StaticResource SecondaryDisabledColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>